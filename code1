from sklearn.datasets import load_iris
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt

dataset = load_iris()
x = pd.DataFrame(dataset.data, columns=dataset.feature_names)
y = dataset.target

xtrain, xtest, ytrain, ytest = train_test_split(x, y, train_size=0.80, random_state=0)

accuracy = []

for i in range(1, 10):
    model = DecisionTreeClassifier(max_depth=i, random_state=0)
    model.fit(xtrain, ytrain)
    prediction = model.predict(xtest)
    accuracy.append(accuracy_score(ytest, prediction))

plt.figure(figsize=(12, 6))
plt.plot(range(1, 10), accuracy, color='red', linestyle='dashed', marker='o', markerfacecolor='blue', markersize=10)
plt.title('Finding Best max_Depth')
plt.xlabel('Max Depth')
plt.ylabel('Accuracy Score')
plt.show()

model = DecisionTreeClassifier(criterion='entropy', max_depth=4, random_state=0)
model.fit(xtrain, ytrain)

pred = model.predict(xtest)
print(np.concatenate((pred.reshape(len(pred),1), ytest.reshape(len(ytest),1)),1))
print("Accuracy of the model: {0}%".format(accuracy_score(ytest,pred)*100))
